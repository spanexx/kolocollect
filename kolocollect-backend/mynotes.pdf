.dashboard-container {
  padding: 20px 40px;
  background-color: #f7f7f7;
  font-family: 'Poppins', sans-serif;
  color: #333;
  position: relative; /* Ensure that the notification is positioned relative to this container */
}

/* Welcome Section */
.welcome-section {
  text-align: center;
  margin-bottom: 40px;
}

.welcome-section h1 {
  font-size: 2.5rem;
  color: #4b5320;
}

.welcome-section p {
  font-size: 1.2rem;
  color: #333;
}

/* Notification Toggle */
.notification-toggle {
  position: absolute; /* Absolute positioning */
  top: 20px; /* Adjust top position */
  right: 20px; /* Adjust right position */
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 1.5rem;
  z-index: 10; /* Make sure it stays on top of other elements */
}

/* Notification Icon Styles */
.notification-icon i {
  margin-right: 10px;
  font-size: 1.8rem; /* Adjust icon size */
  transition: color 0.3s ease; /* Smooth color transition */
}

.notification-icon.no-notification i {
  color: #ffcc00; /* Yellow when no notifications */
}

.notification-icon.has-notification i {
  color: #ff0000; /* Red when there are notifications */
}


/* Quick Stats Section */
.quick-stats {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  margin-bottom: 40px;
}

.stat-card {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
  flex: 1 1 calc(25% - 20px);
  margin: 10px;
}

.stat-card h3 {
  font-size: 2rem;
  color: #4b5320;
}

.stat-card p {
  font-size: 1rem;
  color: #666;
}

/* Recent Activity Section */
.recent-activity {
  margin-bottom: 40px;
}

.recent-activity h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.recent-activity ul {
  list-style: none;
  padding: 0;
}

.recent-activity li {
  background-color: white;
  padding: 10px 20px;
  margin-bottom: 10px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Savings Goals Progress */
.savings-goals {
  margin-bottom: 40px;
}

.savings-goals h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.goal {
  margin-bottom: 20px;
}

.goal p {
  font-size: 1.2rem;
  margin-bottom: 5px;
  color: #333;
}

.progress-bar {
  background-color: #eaeaea;
  border-radius: 5px;
  height: 20px;
}

.progress {
  background-color: #4b5320;
  height: 100%;
  border-radius: 5px;
}

/* Community Overview Section */
.community-overview {
  margin-bottom: 40px;
}

.community-overview h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.community-card {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  margin-bottom: 20px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.community-card h3 {
  font-size: 1.5rem;
  color: #4b5320;
}

.community-card p {
  font-size: 1rem;
  color: #666;
}

.view-community {
  color: #ffcc00;
  text-decoration: none;
}

.view-community:hover {
  text-decoration: underline;
}

/* Community Notifications Section */
.community-notifications {
  margin-bottom: 40px;
}

.community-notifications h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.community-notifications ul {
  list-style: none;
  padding: 0;
}

.community-notifications li {
  background-color: white;
  padding: 10px 20px;
  margin-bottom: 10px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Call to Action Section */
.cta-buttons {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  margin-top: 40px;
}

.cta {
  padding: 15px 30px;
  background-color: #ffcc00;
  color: #000;
  border: none;
  border-radius: 5px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  flex: 1 1 calc(33% - 20px);
  margin: 10px;
}

.cta:hover {
  background-color: #e6b800;
}



/* Community Overview Section */
.community-overview {
  margin-bottom: 40px;
}

.community-overview h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.community-card {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  margin-bottom: 20px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.community-card h3 {
  font-size: 1.5rem;
  color: #4b5320;
  cursor: pointer; /* Make the title clickable */
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
  transition: all 0.3s ease; /* Smooth transition on hover */
}

.community-card h3:hover {
  color: #ffcc00; /* Highlight title on hover */
}

.community-details {
  padding: 10px;
  background-color: #f9f9f9;
  border-left: 3px solid #4b5320;
  margin-top: 10px;
  display: block;
  transition: max-height 0.3s ease-out, opacity 0.3s ease;
}

.community-card .community-details p {
  font-size: 1rem;
  color: #666;
  margin-bottom: 10px;
}

.view-community {
  color: #ffcc00;
  text-decoration: none;
}

.view-community:hover {
  text-decoration: underline;
}

/* Chevron Icons */
.community-card h3 i {
  font-size: 1.2rem;
  transition: transform 0.3s ease; /* Smooth transition for icon rotation */
}

.community-card h3 i.fa-chevron-up {
  transform: rotate(180deg); /* Rotate icon when the dropdown is open */
}

.community-card h3 i.fa-chevron-down {
  transform: rotate(0deg); /* Default state for the icon */
}

/* Optional: For smoother transition of dropdown visibility */
.community-details.ng-trigger {
  transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

.community-details.ng-animating {
  max-height: 0;
  opacity: 0;
  padding: 0;
  margin-top: 0;
}


/* Wallet Section */
.wallet-section {
  margin-bottom: 40px;
  background-color: #f5f5f5;
  padding: 20px;
  border-radius: 10px;
}

.wallet-section h2 {
  font-size: 1.8rem;
  color: #4b5320;
  margin-bottom: 20px;
}

.wallet-details {
  margin-bottom: 20px;
  text-align: center;
}

.wallet-details p {
  font-size: 1.5rem;
  color: #333;
}

.recent-transactions {
  margin-top: 20px;
}

.recent-transactions h3 {
  font-size: 1.5rem;
  color: #4b5320;
  margin-bottom: 10px;
}

.recent-transactions ul {
  list-style: none;
  padding: 0;
}

.recent-transactions li {
  background-color: white;
  padding: 10px 20px;
  margin-bottom: 10px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Button for adding funds */
.cta-add {
  background-color: #4b5320;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.cta-add:hover {
  background-color: #3e4a1b;
}




/* Responsive Styles */
@media (max-width: 1024px) {
  .dashboard-container {
    padding: 20px;
  }

  /* Quick Stats Section */
  .quick-stats {
    flex-wrap: wrap;
    justify-content: space-around;
  }

  .stat-card {
    flex: 1 1 calc(50% - 20px);
    margin-bottom: 20px;
  }

  /* Call to Action Section */
  .cta-buttons {
    .cta {
      flex: 1 1 calc(50% - 20px);
      margin-bottom: 20px;
    }
  }
}

@media (max-width: 768px) {
  .dashboard-container {
    padding: 20px;
  }

  .welcome-section h1 {
    font-size: 2rem;
  }

  /* Quick Stats Section */
  .quick-stats {
    flex-direction: column;
    align-items: center;
  }

  .stat-card {
    width: 100%;
    margin-bottom: 20px;
  }

  /* Call to Action Section */
  .cta-buttons {
    flex-direction: column;
    align-items: center;
  }

  .cta {
    width: 100%;
    margin-bottom: 20px;
  }
}

@media (max-width: 480px) {
  .welcome-section h1 {
    font-size: 1.8rem;
  }

  .quick-stats .stat-card h3 {
    font-size: 1.5rem;
  }

  .recent-activity h2,
  .savings-goals h2,
  .community-overview h2 {
    font-size: 1.5rem;
  }

  .community-card h3 {
    font-size: 1.2rem;
  }

  .cta-buttons {
    .cta {
      font-size: 1rem;
    }
  }
}

<div class="dashboard-container">
  <!-- Welcome Section -->
  <div class="welcome-section">
    <h1>Welcome, {{ user?.name }}!</h1>
    <p>Hereâ€™s an overview of your contributions, savings progress, and wallet balance.</p>
  </div>

  <!-- Wallet Section -->
  <div class="wallet-section">
    <div class="wallet-details">
      <p>Balance: {{ walletBalance | currency }}</p>
      <button (click)="viewWalletDetails()" class="cta">View Wallet Details</button>
      <button (click)="addFunds()" class="cta-add">Add Funds</button>

    </div>

    <div class="recent-transactions" *ngIf="recentTransactions.length > 0">
      <h3>Recent Transactions</h3>
      <ul>
        <li *ngFor="let transaction of recentTransactions">
          {{ transaction.date | date: 'short' }} - {{ transaction.type }} - {{ transaction.amount | currency }}
        </li>
      </ul>
    </div>

  </div>

  <!-- Notification Toggle -->
  <div class="notification-toggle" (click)="toggleNotifications()">
    <span class="notification-icon" [ngClass]="unreadNotificationsCount > 0 ? 'has-notification' : 'no-notification'">
      <i class="fa fa-bell"></i>
    </span>
  </div>

  <!-- Quick Stats Section -->
  <div class="quick-stats">
    <div class="stat-card">
      <h3>{{ totalCommunities }}</h3>
      <p>Communities Joined</p>
    </div>
    <div class="stat-card">
      <h3>{{ totalContributions }}</h3>
      <p>Contributions Made</p>
    </div>
    <div class="stat-card">
      <h3>{{ totalSavings | currency }}</h3>
      <p>Amount Saved</p>
    </div>
    <div class="stat-card">
      <h3>{{ upcomingPayout | date }}</h3>
      <p>Next Payout</p>
    </div>
  </div>

  <!-- Recent Activity Section -->
  <div class="recent-activity" *ngIf="recentActivities.length > 0">
    <h2>Recent Activity</h2>
    <ul>
      <li *ngFor="let activity of recentActivities">{{ activity }}</li>
    </ul>
  </div>

  <!-- Savings Goals Progress -->
  <div class="savings-goals" *ngIf="savingsGoals.length > 0">
    <h2>Your Savings Goals</h2>
    <div *ngFor="let goal of savingsGoals" class="goal">
      <p>{{ goal.name }}</p>
      <div class="progress-bar">
        <div class="progress" [style.width]="goal.progress + '%'"></div>
      </div>
    </div>
  </div>

  <!-- Community Overview Section -->
  <div class="community-overview" *ngIf="userCommunities.length > 0">
    <h2>Your Communities</h2>
    <div class="community-card" *ngFor="let community of userCommunities">
      <h3>{{ community.name }}</h3>
      <p>{{ community.description }}</p>
      <p>Members: {{ community.membersList.length }}</p>
      <p>Next Contribution Due: {{ community.nextPayout | date }}</p>
      <a [routerLink]="['/community', community._id]" class="view-community">View Details</a>
    </div>
  </div>

  <!-- Community Notifications Section -->
  <div class="community-notifications" *ngIf="showNotifications">
    <h2>Community Notifications</h2>
    <ul>
      <li *ngFor="let notification of communityNotifications">{{ notification }}</li>
    </ul>
  </div>

  <!-- Call to Action Section -->
  <div class="cta-buttons">
    <button routerLink="/community-list" class="cta">Join a Community</button>
    <button routerLink="/latest" class="cta">Latest Investments</button>
    <button routerLink="/payout-schedule" class="cta">View Payout Schedule</button>
    <button (click)="createCommunity()" class="cta">Create a Community</button>
  </div>
</div>



<header class="header-container">
  <div class="header-top">
    <div class="logo">
      <img routerLink="/" src="assets/logo.png" alt="KoloCollect Logo">
    </div>

    <div class="hamburger" (click)="toggleMenu()">
      <i class="fas fa-bars"></i>
    </div>
  </div>

  <nav class="nav-links" [ngClass]="{'open': isMenuOpen}">
    <ul>
      <li><a routerLink="/" routerLinkActive="active" (click)="closeMenu()">Home</a></li>
      <li><a routerLink="/dashboard" routerLinkActive="active" (click)="closeMenu()">Profile</a></li>
      <li><a routerLink="/community-list" routerLinkActive="active" (click)="closeMenu()">Communities</a></li>
      <li><a routerLink="/about" routerLinkActive="active" (click)="closeMenu()">About</a></li>
      <li><a routerLink="/contact" routerLinkActive="active" (click)="closeMenu()">Contact</a></li>

      <!-- Conditionally show Login or Logout -->
      <li *ngIf="!isLoggedIn()"><a routerLink="/sign-in" class="cta-button" (click)="closeMenu()">Login</a></li>
      <div (click)="closeMenu()">
      <li *ngIf="isLoggedIn()"><a class="cta-button" (click)="logout()">Logout</a></li>
    </div>
    </ul>
  </nav>
</header>

.header-container {
  display: flex;
  flex-direction: row;
  padding: 20px 40px;
  background-color: white;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 1000;

  .header-top {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;

    .logo img {
      max-width: 100px;
      cursor: pointer;

      @media (max-width: 768px) {
        .logo img {
          max-width: 100px; /* Smaller logo for mobile screens */
        }
      }
      
    }

     /* Hamburger Icon */
     .hamburger {
      display: none; /* Hidden by default */
      font-size: 2rem;
      cursor: pointer;

      @media (max-width: 768px) {
        display: block; /* Show on smaller screens */
      }
    }
  }

  /* Navigation Links */
  .nav-links {
    display: flex;
    justify-content: flex-end;
    flex-grow: 1;
    margin-left: auto;

    ul {
      list-style: none;
      display: flex;
      gap: 30px;

      li {
        a {
          font-family: 'Poppins', sans-serif;
          font-size: 1rem;
          color: #4b5320;
          text-decoration: none;
          transition: color 0.3s ease;

          &:hover {
            color: #7ba352;
          }
        }
      }
    }
  }

  /* Call to Action Button */
  .cta-button {
    padding: 10px 20px;
    background-color: #ffcc00;
    color: #000;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    font-family: 'Poppins', sans-serif;
    text-decoration: none;
    transition: background-color 0.3s ease, transform 0.3s ease;

    &:hover {
      background-color: #e6b800;
      transform: translateY(-3px);
    }
  }

  @media (max-width: 768px) {
    .header-top {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      width: 100%;
    }

    .hamburger {
      display: block;
    }

    .nav-links {
      position: absolute; /* Position below header */
      top: 100%; /* Start below the header */
      left: 0;
      right: 0;
      display: none;
      flex-direction: column;
      width: 100%;
      margin-top: 10px;
      padding: 10px;
      background-color: white;
      

      /* Show the menu when the 'open' class is applied */
      &.open {
        display: block;
      }

      ul {
        flex-direction: column;
        gap: 10px;
        width: 100%;
        padding: 10px;

        li {
          width: 100%;

          a {
            display: block;
            padding: 10px 20px;
            background: #f7f7f7;
            color: #333;
            width: 100%;
            text-align: left;

            &:hover {
              background: #7ba352;
              color: white;
            }
          }
        }
      }
    }

    .header-cta {
      display: none; /* Hidden on small screens as it's now in the nav-links */
    }
  }
}

<!-- community list -->

<div class="community-list-container">
    <h1>Browse Communities</h1>
  
    <div class="community-actions">
      <button class="cta" routerLink="/create-community">Create a New Community</button>
    </div>
  
    <div class="community-list">
      <div class="community-card" *ngFor="let community of communities">
        <h2>{{community.name}}</h2>
        <p>{{community.description}}</p>
        <p>Total Members: {{community.members}}</p>
        <button class="cta" routerLink="/community/{{community._id}}">View Community</button>
      </div>
    </div>
  </div>
  

.community-details-container {
    padding: 20px 40px;
    background-color: #f7f7f7;
    font-family: 'Poppins', sans-serif;
  
    h1 {
      font-size: 2.5rem;
      color: #4b5320;
      margin-bottom: 30px;
      text-align: center;
    }
  
    p {
      font-size: 1.2rem;
      color: #666;
      margin-bottom: 30px;
    }
  
    .community-stats {
      display: flex;
      gap: 20px;
      margin: 30px 0;
  
      .stat-card {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        flex: 1;
        text-align: center;
  
        h3 {
          font-size: 1.5rem;
          color: #4b5320;
        }
  
        p {
          font-size: 1.2rem;
          color: #666;
        }
      }
    }
  
    .community-members {
      margin-top: 30px;
  
      h2 {
        font-size: 1.8rem;
        color: #4b5320;
        margin-bottom: 20px;
      }
  
      ul {
        list-style: none;
        padding: 0;
  
        li {
          background-color: white;
          padding: 10px;
          margin-bottom: 10px;
          border-radius: 5px;
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
          color: #333;
          font-size: 1rem;
        }
      }
    }
  
    /* Responsive Styles */
    @media (max-width: 1024px) {
      .community-stats {
        flex-direction: column; /* Stack stat cards on tablets */
      }
  
      .community-stats .stat-card {
        width: 100%;
      }
    }
  
    @media (max-width: 768px) {
      padding: 20px;
  
      h1 {
        font-size: 2rem;
      }
  
      .community-members h2 {
        font-size: 1.5rem;
      }
  
      .community-members ul li {
        font-size: 0.9rem;
      }
    }
  
    @media (max-width: 480px) {
      h1 {
        font-size: 1.8rem;
      }
  
      .community-members h2 {
        font-size: 1.3rem;
      }
  
      .community-members ul li {
        font-size: 0.85rem;
      }
    }
  }
  

<div class="community-details-container" *ngIf="community">
  <h1>{{ community.name }}</h1>
  <p><strong>Description:</strong> {{ community.description || 'No description available' }}</p>
  <p><strong>Community ID:</strong> {{ community._id }}</p>
  
  <div class="community-stats">
    <div class="stat-card">
      <h3>Total Members</h3>
      <p>{{ community.members }}</p>
    </div>
    <div class="stat-card">
      <h3>Total Contributions</h3>
      <p>{{ community.contributions | currency }}</p>
    </div>
    <div class="stat-card">
      <h3>Next Payout</h3>
      <p>{{ community.nextPayout | date }}</p>
    </div>
    <div class="stat-card">
      <h3>Max Members</h3>
      <p>{{ community.maxMembers }}</p>
    </div>
    <div class="stat-card">
      <h3>Contribution Frequency</h3>
      <p>{{ community.contributionFrequency }}</p>
    </div>
    <div class="stat-card">
      <h3>Cycle Lock Enabled</h3>
      <p>{{ community.cycleLockEnabled ? 'Yes' : 'No' }}</p>
    </div>
    <div class="stat-card">
      <h3>Backup Fund</h3>
      <p>{{ community.backupFund | currency }}</p>
    </div>
  </div>

  <div class="community-members">
    <h2 (click)="toggleMembers()">
      Members <i class="fas" [ngClass]="{'fa-chevron-down': !membersVisible, 'fa-chevron-up': membersVisible}"></i>
    </h2>
    <div *ngIf="membersVisible" class="members-list">
      <ul>
        <li *ngFor="let member of community.membersList">
          <strong>{{ member.name }}</strong> (<span>{{ member.email }}</span>)
          <br />
          Contributions Paid: {{ member.contributionsPaid?.total || 0 | currency }}
        </li>
      </ul>
    </div>
  </div>

  <button *ngIf="!hasJoined" class="cta" (click)="joinCommunity()">Join Community</button>
  <button *ngIf="hasJoined" class="cta" (click)="goToContributeForm()">Contribute</button>
</div>

<app-contribute-form
  *ngIf="showContributeModal"
  [communityId]="communityId"
  [showModal]="showContributeModal"
  (close)="closeContributeModal()"
  (contributionSubmitted)="handleContribution($event)"
></app-contribute-form>

<!-- Loading Spinner or Message when community is not available yet -->
<div *ngIf="!community" class="loading-message">
  <p>Loading community details...</p>
</div>

.community-details-container {
  padding: 20px 40px;
  background-color: #f7f7f7;
  font-family: 'Poppins', sans-serif;
  position: relative;

  h1 {
    font-size: 2.5rem;
    color: #4b5320;
    margin-bottom: 30px;
    text-align: center;
  }

  p {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 30px;
    line-height: 1.6;
  }

  .community-stats {
    display: flex;
    gap: 20px;
    margin: 30px 0;
    flex-wrap: wrap;
    justify-content: space-between; /* Distribute cards evenly */

    .stat-card {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      flex: 1 1 250px; /* Flex-grow with a minimum width of 250px */
      text-align: center;
      min-width: 250px; /* Minimum width for each stat card */
      margin: 10px 0;

      h3 {
        font-size: 1.5rem;
        color: #4b5320;
        margin-bottom: 10px;
      }

      p {
        font-size: 1.2rem;
        color: #666;
        font-weight: bold;
      }
    }
  }

  .community-members {
    margin-top: 30px;

    h2 {
      font-size: 1.8rem;
      color: #4b5320;
      margin-bottom: 20px;
      cursor: pointer;
    }

    ul {
      list-style: none;
      padding: 0;

      li {
        background-color: white;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        color: #333;
        font-size: 1rem;
        display: flex;
        flex-direction: column;
        gap: 5px;

        strong {
          font-size: 1.1rem;
          color: #333;
        }

        span {
          font-size: 0.9rem;
          color: #888;
        }
      }
    }
  }

  .cta {
    padding: 15px;
    background-color: #4b5320;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1.2rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 100%; /* Make the button full-width on smaller screens */
    margin: 10px 0;
  }

  .cta:hover {
    background-color: #3e4422;
  }

  .settings-icon {
    font-size: 1.5em;
    color: #007bff;
    cursor: pointer;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 10;
  }

  /* Responsive Styles */
  @media (max-width: 1024px) {
    padding: 20px; /* Reduce padding on smaller screens */

    .community-stats {
      flex-direction: column; /* Stack stat cards on smaller screens */
    }

    .community-stats .stat-card {
      width: 100%; /* Make stat cards full-width on smaller screens */
      margin-bottom: 20px;
    }

    .cta {
      font-size: 1rem; /* Adjust CTA button text size */
      padding: 12px;
    }
  }

  @media (max-width: 768px) {
    padding: 15px;

    h1 {
      font-size: 2rem;
    }

    .community-members h2 {
      font-size: 1.5rem;
    }

    .community-members ul li {
      font-size: 0.9rem;
    }

    .cta {
      font-size: 1rem; /* Adjust font size for smaller screens */
    }
  }

  @media (max-width: 480px) {
    padding: 10px;

    h1 {
      font-size: 1.8rem;
    }

    .community-members h2 {
      font-size: 1.3rem;
    }

    .community-members ul li {
      font-size: 0.85rem;
    }

    .cta {
      padding: 10px; /* Adjust padding for smaller screens */
      font-size: 0.9rem;
    }
  }
}